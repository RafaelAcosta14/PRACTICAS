package Practicas;

import java.util.Random;


import javax.swing.JOptionPane;


public class Practica2 extends javax.swing.JFrame {

    /**
     * Creates new form Practica2
     */
    
    public Practica2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLimInferior = new javax.swing.JLabel();
        lblLimSuperior = new javax.swing.JLabel();
        spinnerLimInferior = new javax.swing.JSpinner();
        spinnerLimSuperior = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        btnGenerar = new javax.swing.JButton();
        txtFielNumGenerado = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lblLimInferior.setText("Limite inferior");

        lblLimSuperior.setText("Limite superior");

        spinnerLimInferior.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerLimInferiorStateChanged(evt);
            }
        });

        spinnerLimSuperior.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerLimSuperiorStateChanged(evt);
            }
        });

        jLabel3.setText("Numero Generado");

        btnGenerar.setText("Generar");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        txtFielNumGenerado.setEditable(false);
        txtFielNumGenerado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFielNumGenerado.setText("0");
        txtFielNumGenerado.setFocusable(false);
        txtFielNumGenerado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFielNumGeneradoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLimSuperior)
                            .addComponent(lblLimInferior))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 1, Short.MAX_VALUE)
                                .addComponent(spinnerLimInferior, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(spinnerLimSuperior)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(btnGenerar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFielNumGenerado, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(127, 127, 127))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLimInferior)
                    .addComponent(spinnerLimInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLimSuperior)
                    .addComponent(spinnerLimSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFielNumGenerado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(btnGenerar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        this.validarLimites();
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void spinnerLimInferiorStateChanged(javax.swing.event.ChangeEvent evt) {                                                
        this.validarLimites();
        
    }                                               

    private void txtFielNumGeneradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFielNumGeneradoActionPerformed
        
    }//GEN-LAST:event_txtFielNumGeneradoActionPerformed

    private void spinnerLimSuperiorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerLimSuperiorStateChanged
        this.validarLimites();
    }//GEN-LAST:event_spinnerLimSuperiorStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
  
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica2().setVisible(true);
            }
        });
    }

    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerar;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblLimInferior;
    private javax.swing.JLabel lblLimSuperior;
    private javax.swing.JSpinner spinnerLimInferior;
    private javax.swing.JSpinner spinnerLimSuperior;
    private javax.swing.JTextField txtFielNumGenerado;
    // End of variables declaration//GEN-END:variables

    private void validarLimites() {
       int numGenerado = 0;
       int numLimiteInferior = (int) this.spinnerLimInferior.getValue();
       int numLimiteSuperior = (int) this.spinnerLimSuperior.getValue();
              
       Random orgn = new Random();
       
       numGenerado = orgn.nextInt(Math.abs( numLimiteSuperior-numLimiteInferior))+numLimiteInferior;
       this.txtFielNumGenerado.setText(Integer.toString(numGenerado));
        
       if (numLimiteInferior>numLimiteSuperior)
       {
        JOptionPane.showMessageDialog(this, "El limite inferior debe de ser menor que el limite superior");

       }
        
    }
}
